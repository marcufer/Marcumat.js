[wave] {
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  overflow: hidden;
  vertical-align: middle;
}

/* Slower, more deliberate ripple expansion
   - JS writes --ripple-duration per ripple (scaled by INTERNAL_SPEED_MULTIPLIER).
   - CSS multiplier below gives an additional global tuning knob.
   - All class names and CSS variable names remain identical so JS integration is unchanged.
   - will-change is applied only during active phases to minimize GPU cost.
*/

:root{
  /* Base fallback; JS will usually write per-ripple --ripple-duration */
  --ripple-duration: 380ms;
  /* Subtle global tuning to make expansion feel professional (slightly faster than older 1.25) */
  --ripple-duration-multiplier: 1.1;

  /* Fade tuning */
  --ripple-fade-duration: 540ms;
  --ripple-fade-multiplier: 1.0;

  /* Blur tuning and transitions */
  --ripple-blur-default: none;
  --ripple-blur-duration: 260ms;
  --ripple-blur-easing: cubic-bezier(0.2, 0.9, 0.32, 1);

  /* gentle ease for expansion */
  --ripple-easing: cubic-bezier(0.12, 0.75, 0.24, 1);

  /* sheen tuning */
  --ripple-sheen-opacity: 0.82;
}

/* Respect user's reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  :root {
    --ripple-duration-multiplier: 1;
    --ripple-blur-duration: 1ms;
    --ripple-fade-duration: 120ms;
  }
}

.ripple {
  pointer-events: none;
  position: absolute;
  border-radius: 50%;
  width: 18px;
  height: 18px;
  background-color: currentColor;

  /* Filter is transitioned â€” JS sets --ripple-blur per ripple (e.g., blur(0.9px)) */
  filter: var(--ripple-blur, var(--ripple-blur-default));
  box-shadow: 0 6px 18px rgba(8, 12, 20, 0.04);

  opacity: 1;
  transform: scale(1) translate3d(0,0,0);
  transform-origin: 50% 50%;

  transition:
    transform calc(var(--ripple-duration, 420ms) * var(--ripple-duration-multiplier, 1)) var(--ripple-easing),
    opacity calc(var(--ripple-fade-duration, 700ms) * var(--ripple-fade-multiplier, 1)) cubic-bezier(0.4, 0, 0.2, 1),
    filter calc(var(--ripple-blur-duration, 260ms)) var(--ripple-blur-easing),
    box-shadow 260ms var(--ripple-easing);

  will-change: auto;
  contain: strict;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
}

/* Subtle sheen (cheap paint) */
.ripple::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50%;
  pointer-events: none;
  background: radial-gradient(circle at 40% 35%, rgba(255,255,255,0.08) 0%, rgba(255,255,255,0.02) 28%, transparent 58%);
  opacity: var(--ripple-sheen-opacity, 0.82);
  transform: scale(1);
  transition:
    transform calc(var(--ripple-duration, 420ms) * var(--ripple-duration-multiplier, 1)) var(--ripple-easing),
    opacity calc(var(--ripple-fade-duration, 700ms) * var(--ripple-fade-multiplier, 1)) cubic-bezier(0.4, 0, 0.2, 1);
  will-change: auto;
}

/* Only hint heavy paint during active phases */
.ripple.animating,
.ripple.fading {
  will-change: transform, opacity, filter;
  /* Slightly lift shadow while animating for perceived depth */
  box-shadow: 0 8px 22px rgba(8, 12, 20, 0.045);
}

/* Hooks used by JS (unchanged) */
.ripple.animating {
  transform: scale(var(--ripple-final-scale, 1)) translate3d(0,0,0);
  /* While expanding we keep a gentle blur */
  filter: var(--ripple-blur, var(--ripple-blur-default));
}
.ripple.animating::before {
  transform: scale(calc(var(--ripple-final-scale, 1) * 1.04));
  opacity: 1;
}

/* Fade to clear: reduce blur smoothly as it fades out to avoid abrupt visual pops */
.ripple.fading {
  opacity: 0;
  filter: blur(0px);
}
.ripple.fading::before {
  opacity: 0;
}

/* Keep box-sizing consistent */
.ripple, .ripple::before { box-sizing: border-box; }
